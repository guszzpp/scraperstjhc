name: Pipeline HCs STJ/TJGO

on:
  schedule:
    - cron: '0 15 * * *'  # Executa diariamente √†s 12h de Bras√≠lia (15h UTC)
  workflow_dispatch: {}

env:
  SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
  SUPABASE_BUCKET: ${{ secrets.SUPABASE_BUCKET }}
  SUPABASE_KEY: ${{ secrets.SUPABASE_KEY }}
  EMAIL_USER: ${{ secrets.EMAIL_USUARIO }}
  EMAIL_PASS: ${{ secrets.EMAIL_SENHA }}
  EMAIL_DESTINO: ${{ secrets.EMAIL_DESTINATARIO }}

jobs:
  diario:
    name: Scraper Di√°rio
    runs-on: ubuntu-latest

    steps:
      - name: üì• Checkout do c√≥digo
        uses: actions/checkout@v4

      - name: üêç Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: üì¶ Instalar depend√™ncias
        run: pip install -r requirements.txt

      - name: üìÅ Criar diret√≥rio de dados
        run: mkdir -p dados_diarios

      - name: üóÇÔ∏è Restaurar cache de dados
        uses: actions/cache@v3
        with:
          path: dados_diarios
          key: dados-diarios-${{ github.sha }}
          restore-keys: dados-diarios-

      - name: üìÖ Definir datas
        id: data
        run: |
          ONTEM=$(TZ=America/Sao_Paulo date -d "yesterday" +"%d/%m/%Y")
          ONTEM_FMT=$(TZ=America/Sao_Paulo date -d "yesterday" +"%d-%m-%Y")
          echo "ontem=$ONTEM" >> $GITHUB_OUTPUT
          echo "ontem_fmt=$ONTEM_FMT" >> $GITHUB_OUTPUT

      - name: üîç Rodar scraper principal
        run: python main.py "${{ steps.data.outputs.ontem }}"

      - name: üìÇ Debug dos arquivos gerados
        run: |
          echo "Arquivos em dados_diarios:"
          ls -lh dados_diarios || echo "Pasta dados_diarios n√£o existe"
          echo "Conte√∫do de attachment.txt:"
          cat attachment.txt || echo "attachment.txt n√£o existe"

      - name: ‚òÅÔ∏è Upload para Supabase (se arquivo existir)
        run: |
          ARQ="dados_diarios/hc_tjgo_${{ steps.data.outputs.ontem_fmt }}.xlsx"
          if [[ -f "$ARQ" ]]; then
            python supabase/supabase_upload.py "$ARQ" "$(basename "$ARQ")"
          else
            echo "Arquivo $ARQ n√£o encontrado. Upload ignorado."
          fi

      - name: üìß Preparar conte√∫do do email
        id: gerar_email
        run: |
          # Assunto
          if [ -f "email_subject.txt" ]; then
            echo "email_subject=$(<email_subject.txt)" >> $GITHUB_OUTPUT
          else
            echo "email_subject=Resultados da checagem de HCs STJ/TJGO - ${{ steps.data.outputs.ontem }}" >> $GITHUB_OUTPUT
          fi

          # Corpo
          if [ -f "email_body.txt" ]; then
            BODY=$(<email_body.txt)
          else
            BODY="<p>Execu√ß√£o conclu√≠da em ${{ steps.data.outputs.ontem }}.</p>"
          fi
          printf "email_body<<EOF\n%s\nEOF\n" "$BODY" >> $GITHUB_OUTPUT

          # Anexo (fallback)
          if [ -s "attachment.txt" ]; then
            ATTACH=$(<attachment.txt)
            if [ -f "$ATTACH" ]; then
              echo "attachment_name=$ATTACH" >> $GITHUB_OUTPUT
            else
              echo "attachment_name=" >> $GITHUB_OUTPUT
            fi
          else
            ALT_ANEXO="dados_diarios/hc_tjgo_${{ steps.data.outputs.ontem_fmt }}.xlsx"
            if [ -f "$ALT_ANEXO" ]; then
              echo "attachment_name=$ALT_ANEXO" >> $GITHUB_OUTPUT
            else
              echo "attachment_name=" >> $GITHUB_OUTPUT
            fi
          fi

      - name: üì§ Enviar e-mail di√°rio
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 587
          username: ${{ env.EMAIL_USER }}
          password: ${{ env.EMAIL_PASS }}
          subject: "${{ steps.gerar_email.outputs.email_subject }}"
          html_body: "${{ steps.gerar_email.outputs.email_body }}"
          to: ${{ env.EMAIL_DESTINO }}
          from: "Checagem STJ HC <${{ env.EMAIL_USER }}>"
          attachments: "${{ steps.gerar_email.outputs.attachment_name }}"

  rechecagem:
    name: Rechecagem Retroativa
    needs: diario
    runs-on: ubuntu-latest

    steps:
      - name: üì• Checkout do c√≥digo
        uses: actions/checkout@v4

      - name: üêç Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: üì¶ Instalar depend√™ncias
        run: pip install -r requirements.txt

      - name: üìÅ Criar diret√≥rio de dados
        run: mkdir -p dados_diarios

      - name: üìÖ Definir datas (retroativas)
        id: datas_retro
        run: |
          ONTEM=$(date -d "yesterday" +"%d/%m/%Y")
          ONTEM_FMT=$(date -d "yesterday" +"%d-%m-%Y")
          ANTEONTEM=$(date -d "2 days ago" +"%d/%m/%Y")
          ANTEONTEM_FMT=$(date -d "2 days ago" +"%d-%m-%Y")

          echo "ontem=$ONTEM" >> $GITHUB_OUTPUT
          echo "ontem_fmt=$ONTEM_FMT" >> $GITHUB_OUTPUT
          echo "anteontem=$ANTEONTEM" >> $GITHUB_OUTPUT
          echo "anteontem_fmt=$ANTEONTEM_FMT" >> $GITHUB_OUTPUT

      - name: üóÇÔ∏è Restaurar cache de dados
        uses: actions/cache@v3
        with:
          path: dados_diarios
          key: dados-diarios-${{ github.sha }}
          restore-keys: dados-diarios-

      - name: üìÇ Listar arquivos dispon√≠veis
        run: ls -lh dados_diarios/

      - name: ‚¨áÔ∏è Baixar arquivo do dia da rechecagem (D-2)
        run: |
          ARQ="hc_tjgo_${{ steps.datas_retro.outputs.anteontem_fmt }}.xlsx"
          DEST="dados_hoje/$ARQ"
          mkdir -p dados_hoje
          python supabase/supabase_download.py "$SUPABASE_URL" "$SUPABASE_BUCKET" "$ARQ" "$DEST"
    
      - name: üìù Garantir arquivo de hoje (vazio se necess√°rio)
        run: |
          ARQ="hc_tjgo_${{ steps.datas_retro.outputs.anteontem_fmt }}.xlsx"
          DEST="dados_hoje/$ARQ"
          if [ ! -f "$DEST" ]; then
            echo "Arquivo de hoje n√£o existe, criando Excel vazio para evitar erro no comparativo"
            python supabase/criar_xlsx_vazio.py "$DEST"
          fi

      - name: üîÅ Raspagem atual de D-2 (para rechecagem)
        run: |
          python main.py "${{ steps.datas_retro.outputs.anteontem }}"

      - name: üîÑ Rodar script de rechecagem
        run: |
          python retroativos/rechecagem.py "${{ steps.datas_retro.outputs.anteontem }}"
        continue-on-error: true

      - name: üìã Preparar arquivo de rechecagem
        run: |
          ARQ_SAIDA="dados_diarios/rechecagem_hc_tjgo_${{ steps.datas_retro.outputs.anteontem_fmt }}.xlsx"
          if [ -f "tem_divergencia.txt" ] && grep -qx "true" tem_divergencia.txt; then
            echo "Diverg√™ncia detectada, copiando arquivo original"
            cp "dados_diarios/hc_tjgo_${{ steps.datas_retro.outputs.anteontem_fmt }}.xlsx" "$ARQ_SAIDA" || echo "Erro ao copiar arquivo"
          else
            echo "Sem diverg√™ncia, criando comparativo completo D-2 x D-1"
            python supabase/criar_xlsx_comparativo.py \
              "$ARQ_SAIDA" \
              "dados_hoje/hc_tjgo_${{ steps.datas_retro.outputs.anteontem_fmt }}.xlsx" \
              "dados_diarios/hc_tjgo_${{ steps.datas_retro.outputs.anteontem_fmt }}.xlsx"
          fi

      - name: üìß Definir conte√∫do do email retroativo
        id: email_retro
        run: |
          ARQ_SAIDA="dados_diarios/rechecagem_hc_tjgo_${{ steps.datas_retro.outputs.anteontem_fmt }}.xlsx"

          if [ -f "$ARQ_SAIDA" ]; then
            ANEXO_EMAIL="$ARQ_SAIDA"
          else
            ANEXO_EMAIL=""
          fi

          if [ -f "tem_divergencia.txt" ] && grep -qx "true" tem_divergencia.txt; then
            echo "subject=üö® Diverg√™ncia na rechecagem STJ/TJGO - ${{ steps.datas_retro.outputs.anteontem }}" >> $GITHUB_OUTPUT

            BODY_RETRO="Relat√≥rio de Rechecagem - ${{ steps.datas_retro.outputs.anteontem }}<br><br>\
            Foi detectada uma <b>DIVERG√äNCIA</b> entre os arquivos de HCs do STJ com origem no TJGO.<br>\
            Novos processos foram adicionados retroativamente.<br>\
            O sistema identificou inser√ß√µes tardias para o dia ${{ steps.datas_retro.outputs.anteontem }}.<br><br>\
            Consulte o arquivo em anexo para mais detalhes.<br><br>\
            ---<br>\
            Este e-mail foi gerado automaticamente pelo sistema de rechecagem. Em caso de d√∫vidas, entre em contato com o administrador."

            printf "email_body<<EOF\n%s\nEOF\n" "$BODY_RETRO" >> $GITHUB_OUTPUT
            echo "attachment_name=$ANEXO_EMAIL" >> $GITHUB_OUTPUT
          else
            echo "subject=‚ÑπÔ∏è Sem diverg√™ncias na rechecagem STJ/TJGO - ${{ steps.datas_retro.outputs.anteontem }}" >> $GITHUB_OUTPUT

            BODY_RETRO="Relat√≥rio de Rechecagem - ${{ steps.datas_retro.outputs.anteontem }}<br><br>\
            Nenhum novo Habeas Corpus retroativo (autuado em data anterior, mas s√≥ detectado hoje) foi localizado no STJ com origem no TJGO.<br>\
            A rechecagem realizada hoje se referiu ao dia ${{ steps.datas_retro.outputs.anteontem }}.<br>\
            N√£o foram identificadas inser√ß√µes tardias pelo sistema do STJ.<br><br>\
            ---<br>\
            Este e-mail foi gerado automaticamente pelo sistema de rechecagem. Em caso de d√∫vidas, entre em contato com o administrador."

            printf "email_body<<EOF\n%s\nEOF\n" "$BODY_RETRO" >> $GITHUB_OUTPUT
            echo "attachment_name=$ANEXO_EMAIL" >> $GITHUB_OUTPUT
          fi

      - name: üìß Enviar email da rechecagem
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 587
          username: ${{ env.EMAIL_USER }}
          password: ${{ env.EMAIL_PASS }}
          subject: "${{ steps.email_retro.outputs.subject }}"
          html_body: "${{ steps.email_retro.outputs.email_body }}"
          to: ${{ env.EMAIL_DESTINO }}
          from: "Rechecagem STJ HC <${{ env.EMAIL_USER }}>"
          attachments: "${{ steps.email_retro.outputs.attachment_name }}"

      - name: ‚òÅÔ∏è Upload resultado rechecagem
        run: |
          ARQ_SAIDA="dados_diarios/rechecagem_hc_tjgo_${{ steps.datas_retro.outputs.anteontem_fmt }}.xlsx"
          if [ -f "$ARQ_SAIDA" ]; then
            python supabase/supabase_upload.py "$ARQ_SAIDA" "$(basename "$ARQ_SAIDA")"
          else
            echo "Arquivo de rechecagem n√£o encontrado."
          fi
